<?xml version="1.0" encoding="UTF-8"?><apiPackage id="com.milkmangames.nativeextensions.ios"><apiName>com.milkmangames.nativeextensions.ios</apiName><apiDetail/><apiClassifier id="com.milkmangames.nativeextensions.ios:GameCenter"><apiName>GameCenter</apiName><shortdesc> GameCenter </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc> GameCenter </apiDesc></apiClassifierDetail><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent.SIGNATURE_GENERATION_FAILED_SIGNATURE_GENERATION_FAILED"><apiName>SIGNATURE_GENERATION_FAILED</apiName><shortdesc> Dispatched when a call to gameCenter.loadPlayerPhoto() has generateIdentitySignatureVerification
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent.SIGNATURE_GENERATION_FAILED</apiEventType><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a call to gameCenter.loadPlayerPhoto() has generateIdentitySignatureVerification
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent_SIGNATURE_GENERATED"><apiName>SIGNATURE_GENERATED</apiName><shortdesc> Dispatched when a request to generateIdentitySignatureVerification() completes.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a request to generateIdentitySignatureVerification() completes.  The signatureVerificationData will be an instance of GCSignatureVerificationData. </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent.PLAYER_PHOTO_FAILED_PLAYER_PHOTO_FAILED"><apiName>PLAYER_PHOTO_FAILED</apiName><shortdesc> Dispatched when a call to gameCenter.loadPlayerPhoto() has failed
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent.PLAYER_PHOTO_FAILED</apiEventType><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a call to gameCenter.loadPlayerPhoto() has failed
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent_PLAYER_PHOTO_LOADED"><apiName>PLAYER_PHOTO_LOADED</apiName><shortdesc> Dispatched when a request to loadPlayerPhoto() completes.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a request to loadPlayerPhoto() completes.  The .imageId property will be the player id for the photo, and .image property will contain the photo, or null if none was available. </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent_REMOTE_CHALLENGE_COMPLETED"><apiName>REMOTE_CHALLENGE_COMPLETED</apiName><shortdesc> Dispatched when a non-local player has completed a challenge issued by the local player.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a non-local player has completed a challenge issued by the local player. Triggered by a push notification from the server. Received when a challenge notification banner is tapped, or while the game is running. </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent_LOCAL_CHALLENGE_COMPLETED"><apiName>LOCAL_CHALLENGE_COMPLETED</apiName><shortdesc> Dispatched when the local player has completed one of their challenges, triggered by a push notification from the server.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when the local player has completed one of their challenges, triggered by a push notification from the server. Received only while the game is running. </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent_CHALLENGE_RECEIVED"><apiName>CHALLENGE_RECEIVED</apiName><shortdesc> Dispatched when the local player has received a challenge, triggered by a push notification from the server.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when the local player has received a challenge, triggered by a push notification from the server. Received only while the game is running.
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent_CHALLENGE_SELECTED"><apiName>CHALLENGE_SELECTED</apiName><shortdesc> Dispatched when the user taps a challenge notification banner or the "Play Now" button for a challenge inside Game Center, causing the game to launch.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when the user taps a challenge notification banner or the "Play Now" button for a challenge inside Game Center, causing the game to launch. Also called when the user taps a challenge banner inside the game.
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent.ACHIEVEMENT_PROGRESS_FAILED_ACHIEVEMENT_PROGRESS_FAILED"><apiName>ACHIEVEMENT_PROGRESS_FAILED</apiName><shortdesc> Dispatched when a call to gameCenter.loadAchievementProgress() has failed
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent.ACHIEVEMENT_PROGRESS_FAILED</apiEventType><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a call to gameCenter.loadAchievementProgress() has failed
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent.ACHIEVEMENT_PROGRESS_LOADED_ACHIEVEMENT_PROGRESS_LOADED"><apiName>ACHIEVEMENT_PROGRESS_LOADED</apiName><shortdesc> Dispatched after a successful call to gameCenter.loadAchievementProgress().</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>com.milkmangames.nativeextensions.ios.events.GameCenterEvent.ACHIEVEMENT_PROGRESS_LOADED</apiEventType><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched after a successful call to gameCenter.loadAchievementProgress().  The achievementProgresses property will be populated with a vector of TCAchievementProgress objects.
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent.SCORES_FAILED_SCORES_FAILED"><apiName>SCORES_FAILED</apiName><shortdesc> Dispatched when a call to gameCenter.loadScoresForCategory() has failed
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent.SCORES_FAILED</apiEventType><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a call to gameCenter.loadScoresForCategory() has failed
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent.SCORES_LOADED_SCORES_LOADED"><apiName>SCORES_LOADED</apiName><shortdesc> Dispatched after a successful call to gameCenter.loadScoresForCategory().</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>com.milkmangames.nativeextensions.ios.events.GameCenterEvent.SCORES_LOADED</apiEventType><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched after a successful call to gameCenter.loadScoresForCategory().  The scoreDatas property will be populated with a vector of GCScoreData objects.
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent.ACHIEVEMENT_DATA_FAILED_ACHIEVEMENT_DATA_FAILED"><apiName>ACHIEVEMENT_DATA_FAILED</apiName><shortdesc> Dispatched when a call to gameCenter.loadAchievementData() has failed
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent.ACHIEVEMENT_DATA_FAILED</apiEventType><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a call to gameCenter.loadAchievementData() has failed
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent.ACHIEVEMENT_DATA_LOADED_ACHIEVEMENT_DATA_LOADED"><apiName>ACHIEVEMENT_DATA_LOADED</apiName><shortdesc> Dispatched after a successful call to gameCenter.loadAchievementData().</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>com.milkmangames.nativeextensions.ios.events.GameCenterEvent.ACHIEVEMENT_DATA_LOADED</apiEventType><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched after a successful call to gameCenter.loadAchievementData().  The achievementDatas property will be populated with a vector of GCAchievementData objects.
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent.LEADERBOARD_DATA_FAILED_LEADERBOARD_DATA_FAILED"><apiName>LEADERBOARD_DATA_FAILED</apiName><shortdesc> Dispatched when a call to gameCenter.loadLeaderboardData() has failed
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent.LEADERBOARD_DATA_FAILED</apiEventType><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a call to gameCenter.loadLeaderboardData() has failed
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent.LEADERBOARD_DATA_LOADED_LEADERBOARD_DATA_LOADED"><apiName>LEADERBOARD_DATA_LOADED</apiName><shortdesc> Dispatched after a successful call to gameCenter.loadLeaderboardData().</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>com.milkmangames.nativeextensions.ios.events.GameCenterEvent.LEADERBOARD_DATA_LOADED</apiEventType><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched after a successful call to gameCenter.loadLeaderboardData().  The playerDatas property will be populated with a vector of GCLeaderboardData objects.
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent.PLAYER_DATA_FAILED_PLAYER_DATA_FAILED"><apiName>PLAYER_DATA_FAILED</apiName><shortdesc> Dispatched when a call to gameCenter.loadPlayerData() has failed
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent.PLAYER_DATA_FAILED</apiEventType><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a call to gameCenter.loadPlayerData() has failed
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent.PLAYER_DATA_LOADED_PLAYER_DATA_LOADED"><apiName>PLAYER_DATA_LOADED</apiName><shortdesc> Dispatched after a successful call to gameCenter.loadPlayerData().</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>com.milkmangames.nativeextensions.ios.events.GameCenterEvent.PLAYER_DATA_LOADED</apiEventType><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched after a successful call to gameCenter.loadPlayerData().  The playerDatas property will be populated with a vector of GCPlayerData objects.
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent.FRIENDS_FAILED_FRIENDS_FAILED"><apiName>FRIENDS_FAILED</apiName><shortdesc> Dispatched when a call to gameCenter.loadFriends() has failed
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent.FRIENDS_FAILED</apiEventType><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a call to gameCenter.loadFriends() has failed
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent.FRIENDS_LOADED_FRIENDS_LOADED"><apiName>FRIENDS_LOADED</apiName><shortdesc> Dispatched after a successful call to gameCenter.loadFriends().</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>com.milkmangames.nativeextensions.ios.events.GameCenterEvent.FRIENDS_LOADED</apiEventType><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched after a successful call to gameCenter.loadFriends().  The friendIds property will be populated with friends' GameCenter ids.
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent.CHALLENGE_VIEW_FAILED_CHALLENGE_VIEW_FAILED"><apiName>CHALLENGE_VIEW_FAILED</apiName><shortdesc> Dispatched when a call to gameCenter.showChallenger() has failed
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent.CHALLENGE_VIEW_FAILED</apiEventType><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a call to gameCenter.showChallenger() has failed
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent.CHALLENGE_VIEW_CLOSED_CHALLENGE_VIEW_CLOSED"><apiName>CHALLENGE_VIEW_CLOSED</apiName><shortdesc> Dispatched when the challenger view has been closed, after a call to gameCenter.showChallenger()
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>com.milkmangames.nativeextensions.ios.events.GameCenterEvent.CHALLENGE_VIEW_CLOSED</apiEventType><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when the challenger view has been closed, after a call to gameCenter.showChallenger()
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent.CHALLENGE_VIEW_OPENED_CHALLENGE_VIEW_OPENED"><apiName>CHALLENGE_VIEW_OPENED</apiName><shortdesc> Dispatched when the challenger view has been displayed, after a call to gameCenter.showChallenger()
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>com.milkmangames.nativeextensions.ios.events.GameCenterEvent.CHALLENGE_VIEW_OPENED</apiEventType><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when the challenger view has been displayed, after a call to gameCenter.showChallenger()
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent.FRIEND_REQUEST_VIEW_CLOSED_FRIEND_REQUEST_VIEW_CLOSED"><apiName>FRIEND_REQUEST_VIEW_CLOSED</apiName><shortdesc> Dispatched when the friend request view has been closed, after a call to gameCenter.inviteFriends()
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>com.milkmangames.nativeextensions.ios.events.GameCenterEvent.FRIEND_REQUEST_VIEW_CLOSED</apiEventType><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when the friend request view has been closed, after a call to gameCenter.inviteFriends()
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent.FRIEND_REQUEST_VIEW_OPENED_FRIEND_REQUEST_VIEW_OPENED"><apiName>FRIEND_REQUEST_VIEW_OPENED</apiName><shortdesc> Dispatched when the friend request view has been displayed, after a call to gameCenter.inviteFriends()
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>com.milkmangames.nativeextensions.ios.events.GameCenterEvent.FRIEND_REQUEST_VIEW_OPENED</apiEventType><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when the friend request view has been displayed, after a call to gameCenter.inviteFriends()
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent_ACHIEVEMENT_RESET_FAILED"><apiName>ACHIEVEMENT_RESET_FAILED</apiName><shortdesc> Dispatched when an achievement reset failed after a call to gameCenter.resetAchievements() </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when an achievement reset failed after a call to gameCenter.resetAchievements() </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent_ACHIEVEMENT_REPORT_FAILED"><apiName>ACHIEVEMENT_REPORT_FAILED</apiName><shortdesc> Dispatched when an achievement submission failed after a call to gameCenter.reportAchievement() </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when an achievement submission failed after a call to gameCenter.reportAchievement() </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent_SCORE_REPORT_FAILED"><apiName>SCORE_REPORT_FAILED</apiName><shortdesc> Dispatched when a score submission failed after a call to gameCenter.reportScoreForCategory() </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a score submission failed after a call to gameCenter.reportScoreForCategory() </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent_AUTH_FAILED"><apiName>AUTH_FAILED</apiName><shortdesc> Dispatched when authentication of the local user has failed after a call to gameCenter.authenticateLocalUser() </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when authentication of the local user has failed after a call to gameCenter.authenticateLocalUser() </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent_ACHIEVEMENT_RESET_SUCCEEDED"><apiName>ACHIEVEMENT_RESET_SUCCEEDED</apiName><shortdesc> Dispatched when an achievement reset succeeded after a call to gameCenter.resetAchievements() </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when an achievement reset succeeded after a call to gameCenter.resetAchievements() </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent_ACHIEVEMENT_REPORT_SUCCEEDED"><apiName>ACHIEVEMENT_REPORT_SUCCEEDED</apiName><shortdesc> Dispatched when an achievement submission succeeded after a call to gameCenter.reportAchievement() </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when an achievement submission succeeded after a call to gameCenter.reportAchievement() </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent_SCORE_REPORT_SUCCEEDED"><apiName>SCORE_REPORT_SUCCEEDED</apiName><shortdesc> Dispatched when a score submission succeeded after a call to gameCenter.reportScoreForCategory() </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when a score submission succeeded after a call to gameCenter.reportScoreForCategory() </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent_ACHIEVEMENTS_VIEW_CLOSED"><apiName>ACHIEVEMENTS_VIEW_CLOSED</apiName><shortdesc> Dispatched when the default achievement view has been dismissed by the user.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when the default achievement view has been dismissed by the user. </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent_ACHIEVEMENTS_VIEW_OPENED"><apiName>ACHIEVEMENTS_VIEW_OPENED</apiName><shortdesc> Dispatched when the default leaderboard view has been displayed, after a call to gameCenter.showAchievements() </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when the default leaderboard view has been displayed, after a call to gameCenter.showAchievements() </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent_LEADERBOARD_VIEW_CLOSED"><apiName>LEADERBOARD_VIEW_CLOSED</apiName><shortdesc> Dispatched when the default leaderboard view has been dismissed by the user.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when the default leaderboard view has been dismissed by the user. </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent_LEADERBOARD_VIEW_OPENED"><apiName>LEADERBOARD_VIEW_OPENED</apiName><shortdesc> Dispatched when the default leaderboard view has been displayed, after a call to gameCenter.showLeaderboardForCategory() </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when the default leaderboard view has been displayed, after a call to gameCenter.showLeaderboardForCategory() </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="com.milkmangames.nativeextensions.ios:GameCenter_com.milkmangames.nativeextensions.ios.events.GameCenterEvent_AUTH_SUCCEEDED"><apiName>AUTH_SUCCEEDED</apiName><shortdesc> Dispatched when the user has been successfully authorized after a call to gameCenter.authenticateLocalUser() </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> Dispatched when the user has been successfully authorized after a call to gameCenter.authenticateLocalUser() </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:areBannersAvailable"><apiName>areBannersAvailable</apiName><shortdesc>
	 Determine if native banner displays for achievements are available on this device (Must be running iOS 5+ with GameCenter.)
	 
	 You can enable native UI Achievement Banners by calling showAchievementBanners(true).</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if the current device is able to display Achievement notification banners in the native UI.
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 Determine if native banner displays for achievements are available on this device (Must be running iOS 5+ with GameCenter.)
	 
	 You can enable native UI Achievement Banners by calling showAchievementBanners(true).
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:areChallengesAvailable"><apiName>areChallengesAvailable</apiName><shortdesc>
	 Determine if Challenges are available on this device (Must be running iOS 6+ with GameCenter.)
	 
	 You can display a challenger view by calling showChallenger().</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if the current device is able to display the challenger view.
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 Determine if Challenges are available on this device (Must be running iOS 6+ with GameCenter.)
	 
	 You can display a challenger view by calling showChallenger().
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:authenticateLocalUser"><apiName>authenticateLocalUser</apiName><shortdesc>
	 Sends request to authenticate (log in) the user on GameCenter.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>if the current device does not support GameCenter.
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>useDeferredAuth</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>on iOS 6+ only, if set to true, the login dialog will not be displayed immediately.  In this case, you should call showDeferredAuthUI() shortly after to present the authorization dialog to the user.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Sends request to authenticate (log in) the user on GameCenter.  On completion, either GameCenterEvent.AUTH_SUCCEEDED or GameCenterErrorEvent.AUTH_FAILED will be dispatched.
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</linktext></link><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterErrorEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:create"><apiName>create</apiName><shortdesc>
	 Initializes the GameCenter Extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiException><apiDesc>if GameCenter has already been initialized.
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException><apiReturn><apiDesc>initialized instance of GameCenter extension interface.
	 </apiDesc><apiOperationClassifier>com.milkmangames.nativeextensions.ios:GameCenter</apiOperationClassifier></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="flash.display:Stage"/><apiData>null</apiData><apiDesc>This must point to your project's stage.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Initializes the GameCenter Extension.  You should check GameCenter.isSupported first to ensure the platform is iOS.
	 GameCenter is a Singleton and you may have only one instance.  After creation, you may access the instance through
	 the static property GameCenter.gameCenter .
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:dispose"><apiName>dispose</apiName><shortdesc> Dispose of Context </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Dispose of Context </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:generateIdentitySignatureVerification"><apiName>generateIdentitySignatureVerification</apiName><shortdesc>
	 Generate player identity signature verification data that you can pass to your own server to validate that a player is authenticated.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>if the current device does not support GameCenter.
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	 Generate player identity signature verification data that you can pass to your own server to validate that a player is authenticated.  Before using this, check isIdentitySignatureVerificationAvailable(), as it is only available on iOS 7 and higher.  The player must be logged in locally before this call will work.
	 
	 If the request succeeds, GameCenterEvent.SIGNATURE_GENERATED will be dispatched, and its signatureVerificationData will be an instance of GCSignatureVerificationData.  If it fails, GameCenterErrorEvent.SIGNATURE_GENERATION_FAILED will be dispatched instead.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</linktext></link><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterErrorEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</linktext></link><link href="com.milkmangames.nativeextensions.ios.xml#GCSignatureVerificationData"><linktext>com.milkmangames.nativeextensions.ios.GCSignatureVerificationData</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:getMaxFriendInviteRecipients"><apiName>getMaxFriendInviteRecipients</apiName><shortdesc>
	 Get the maximum number of friend request recipients that can be passed to GameCenter.gameCenter.inviteFriends().</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>the maximum number of ids and emails that may be passed to GameCenter.gameCenter.inviteFriends().
	 </apiDesc><apiType value="int"/></apiReturn></apiOperationDef><apiDesc>
	 Get the maximum number of friend request recipients that can be passed to GameCenter.gameCenter.inviteFriends().
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:getPlayerAlias"><apiName>getPlayerAlias</apiName><shortdesc>
	 Gets the Alias (human-readable name) of the current logged in player.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>the alias of the current logged in player.
	 </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
	 Gets the Alias (human-readable name) of the current logged in player.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:getPlayerID"><apiName>getPlayerID</apiName><shortdesc>
	 Get the unique identifier of the current logged in player.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>the GameCenter player ID of the current logged in player.
	 </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
	 Get the unique identifier of the current logged in player.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:inviteFriends"><apiName>inviteFriends</apiName><shortdesc>
	 Present a dialog to the user for inviting new friends to GameCenter.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>if the number of specified recipients exceeds the max allowed
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>emailAddresses</apiItemName><apiType value="Vector$String"/><apiData>null</apiData><apiDesc>an optional array of email addresses to display as invite recipients
	 </apiDesc></apiParam><apiParam><apiItemName>friendIds</apiItemName><apiType value="Vector$String"/><apiData>null</apiData><apiDesc>	an optional array of GameCenter playerIds to display as invite recipients
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Present a dialog to the user for inviting new friends to GameCenter.
	 
	 The GameCenter UI will allow a limited number of users to be prepopulated into the list.  To determine this maximum, call GameCenter.gameCenter.getMaxFriendInviteRecipients().
	 
	 Optionally, you can pass in a vector array of GameCenter playerIDs, and/or email addresses, to preopulate the list.  If none are passed, the user will be prompted to enter a friend manually.
	 
	 When the dialog is displayed, GameCenterEvent.FRIEND_REQUEST_VIEW_OPENED will be dispatched.  When it's dimissed, GameCenterEvent.FRIEND_REQUEST_VIEW_CLOSED will be dispatched.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:isGameCenterAvailable"><apiName>isGameCenterAvailable</apiName><shortdesc>
	 Checks if GameCenter is available on the running device.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if the current device supports GameCenter (iOS 4.1+)
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 Checks if GameCenter is available on the running device.  GameCenter requires at least iOS 4.1; your app will run on iOS 4.0, but will not be able to use GameCenter features.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:isIdentitySignatureVerificationAvailable"><apiName>isIdentitySignatureVerificationAvailable</apiName><shortdesc>
	 Checks if generateIdentitySignatureVerification() data is available on the device (only iOS 7 and higher devices support this feature.)  Check this before calling generateIdentitySignatureVerification().</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>if the current device does not support GameCenter.
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException><apiReturn><apiDesc>true if the device is running iOS 7 or higher and can execute generateIdentitySignatureVerification()
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 Checks if generateIdentitySignatureVerification() data is available on the device (only iOS 7 and higher devices support this feature.)  Check this before calling generateIdentitySignatureVerification().
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:isPlayerUnderage"><apiName>isPlayerUnderage</apiName><shortdesc>
	 Check if the current logged in player is 'underage' in the GameCenter database.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if the currently authenticated player is underage.
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 Check if the current logged in player is 'underage' in the GameCenter database.  Apple may restrict some features for underage players.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:isSupported"><apiName>isSupported</apiName><shortdesc>
	 Checks if the current platform supports GameCenter.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>true if GameCenter is supported; false otherwise.
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 Checks if the current platform supports GameCenter.  Note that this only determines whether the app is running under iOS (as opposed to Android, Windows, etc.), and will NOT tell you whether the particular device's iOS has GameCenter installed.
	 
	 Use this call before initializing GameCenter in order to confirm that you are on iOS.  (So that you can avoid initializing GameCenter on an unsupported platform when building a multi-platform app.)
	 
	 After initialization, you can check if the particular iOS device has GameCenter installed with the call GameCenter.gameCenter.isGameCenterAvailable().
	 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="com.milkmangames.nativeextensions.ios.isGameCenterAvailable.xml"><linktext>isGameCenterAvailable</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:isUserAuthenticated"><apiName>isUserAuthenticated</apiName><shortdesc>
	 Check if the user is currently logged in and authenticated with GameCenter.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>if the current device does not support GameCenter.
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException><apiReturn><apiDesc>true if the user is authenticated with GameCenter.
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 Check if the user is currently logged in and authenticated with GameCenter.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:loadAchievementData"><apiName>loadAchievementData</apiName><shortdesc>
	 Makes a request to load data about the achievements available for the current game.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	 Makes a request to load data about the achievements available for the current game.  If successful, GameCenterEvent.ACHIEVEMENT_DATA_LOADED will be dispatched, and its achievementDatas property will be populated with a Vector array of GCAchievementData objects.  If the request fails, GameCenterErrorEvent.ACHIEVEMENT_DATA_FAILED will be dispatched.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</linktext></link><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterErrorEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:loadAchievementProgress"><apiName>loadAchievementProgress</apiName><shortdesc>
	 Makes a request to load details about the current player's progress in completing achievements.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	 Makes a request to load details about the current player's progress in completing achievements.  Upon completion, GameCenterEvent.ACHIEVEMENT_PROGRESS_LOADED will be dispatched, and its achievementProgresses property will be populated with a vector array of GCAchievementProgress objects.  If an error occurs, GameCenterErrorEvent.ACHIEVEMENT_PROGRESS_LOADED will be dispatched instead.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</linktext></link><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterErrorEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:loadFriends"><apiName>loadFriends</apiName><shortdesc>
	 Makes a request to load a list of the current player's friends from GameCenter.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	 Makes a request to load a list of the current player's friends from GameCenter.  If successful, GameCenterEvent.FRIENDS_LOADED will be dispatched, and its friendIds property will be populated with a String vector of the friends' ids.  If the call fails, GameCenterErrorEvent.FRIENDS_FAILED will be dispatched.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</linktext></link><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterErrorEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:loadLeaderboardData"><apiName>loadLeaderboardData</apiName><shortdesc>
	 Sends a request to load the titles and categories of the leaderboards available for this app.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	 Sends a request to load the titles and categories of the leaderboards available for this app.
	 
	 Upon completion, GameCenterEvent.LEADERBOARD_DATA_LOADED will be dispatched, and its leaderboardDatas property will be populated with a Vector array of GCLeaderboardData objects.  If the request fails, GameCenterErrorEvent.LEADERBOARD_DATA_FAILED will be dispatched.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</linktext></link><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterErrorEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:loadPlayerData"><apiName>loadPlayerData</apiName><shortdesc>
	 Makes a request to load player information details for the given set of Player IDs.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>playerIDs</apiItemName><apiType value="Vector$String"/><apiDesc>vector array of player id strings for which to load data
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Makes a request to load player information details for the given set of Player IDs.  Upon completion, GameCenterEvent.PLAYER_DATA_LOADED will be dispatched, and its playerDatas property will be populated with a vector array of GCPlayerData objects.  If an error occurs, GameCenterErrorEvent.PLAYER_DATA_FAILED will be dispatched instead.
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</linktext></link><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterErrorEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:loadPlayerPhoto"><apiName>loadPlayerPhoto</apiName><shortdesc>
	 Loads the photo for the given player ID.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>playerId</apiItemName><apiType value="String"/><apiDesc>the playerId for which to load the photo
	 </apiDesc></apiParam><apiParam><apiItemName>photoSize</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>the size of image to load -either GCImageSize.NORMAL or GCImageSize.SMALL
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Loads the photo for the given player ID.  On completion, GameCenterEvent.PLAYER_PHOTO_LOADED will always be dispatched.  The .imageId property will be the player id for the photo, and .image property will contain the photo, or null if none was available. 
	 
	 If an error occurs loading the image, GameCenterEvent
	 
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterErrorEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</linktext></link><link href="com.milkmangames.nativeextensions.ios.xml#GCImageSize"><linktext>com.milkmangames.nativeextensions.ios.GCImageSize</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:loadScoresForCategory"><apiName>loadScoresForCategory</apiName><shortdesc>
	 Loads a list of high scores for the leaderboard of the given category.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>category</apiItemName><apiType value="String"/><apiDesc>the category for which to load leaderboard score data
	 </apiDesc></apiParam><apiParam><apiItemName>playerScope</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>the scope of players to load scores for, either GCPlayerScope.GLOBAL or GCPlayerScope.FRIENDS_ONLY
	 </apiDesc></apiParam><apiParam><apiItemName>timeScope</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>the time scope of scores to load; GCTimeScope.ALL_TIME, GCTimeScope.TODAY, or GCTimeScope.WEEK
	 </apiDesc></apiParam><apiParam><apiItemName>rangeStart</apiItemName><apiType value="uint"/><apiData>1</apiData><apiDesc>the starting value of the score ranks to load, with a 1 based index ('1' is the top score)
	 </apiDesc></apiParam><apiParam><apiItemName>rangeLength</apiItemName><apiType value="uint"/><apiData>25</apiData><apiDesc>the number of scores to load, starting with the rangeStart value (100 is the maximum value)
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Loads a list of high scores for the leaderboard of the given category.
	 
	 Upon completion, GameCenterEvent.SCORES_LOADED will be dispatched, and its scoreDatas property will be populated with a Vector array of GCScoreData objects.  If the request fails, GameCenterErrorEvent.SCORES_LOAD_FAILED will be dispatched instead.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:readObjectNumber"><apiName>readObjectNumber</apiName><shortdesc> Read Object Number </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>inObj</apiItemName><apiType value="Object"/></apiParam><apiParam><apiItemName>key</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>defaultValue</apiItemName><apiType value="Number"/><apiData>0</apiData></apiParam></apiOperationDef><apiDesc> Read Object Number </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:reportAchievement"><apiName>reportAchievement</apiName><shortdesc>
	 Report achievement progress to the GameCenter server.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>if the current device does not support GameCenter.
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException><apiException><apiDesc>if completion argument is not in the range of 0 to 100.
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>achievementId</apiItemName><apiType value="String"/><apiDesc>the id of the achievement you are reporting; this is set in iTunes Connect when you define the achievements. Case-sensitive.
	 </apiDesc></apiParam><apiParam><apiItemName>completion</apiItemName><apiType value="Number"/><apiDesc>a value from 0.0-100.0, representing the percentage to which this achievement has been completed.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Report achievement progress to the GameCenter server. Either GameCenterEvent.ACHIEVEMENT_REPORT_SUCCEEDED or GameCenterErrorEvent.ACHIEVEMENT_REPORT_FAILED will be dispatched.
	 
	 Note that iOS will not automatically display a banner when an achievement is earned, unless you've called showAchievementBanners(true), and the OS supports it (find out by calling areBannersAvailable()).
	 
	 If native achievements banners are not available, you should listen for GameCenterEvent.ACHIEVEMENT_REPORT_SUCCEEDED show a banner there if you wish.
	 
	 It is best practice to store the state of the user's achievements in the case of a failed report, so you may try again later to report the progress.
	 
	 It is best practice be sure the user is logged in (via isUserAuthenticated()) prior to reporting a score.
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</linktext></link><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterErrorEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:reportScoreForCategory"><apiName>reportScoreForCategory</apiName><shortdesc>
	 Report a score to the GameCenter server.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>if the current device does not support GameCenter.
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>score</apiItemName><apiType value="int"/><apiDesc>the score you would like to report for the current user.
	 </apiDesc></apiParam><apiParam><apiItemName>category</apiItemName><apiType value="String"/><apiDesc>the id of the leaderboard for which you wish to report score; this is set in iTunes Connect when you define the leaderboard. Case-sensitive.
	 </apiDesc></apiParam><apiParam><apiItemName>context</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>an Optional arbitrary value to associate with this score; will be available when calling loadScores()
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Report a score to the GameCenter server.  On completion, either GameCenterEvent.SCORE_REPORT_SUCCEEDED or GameCenterErrorEvent.SCORE_REPORT_FAILED will be dispatched.
	 
	 It is best practice be sure the user is logged in (via isUserAuthenticated()) prior to reporting a score.
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</linktext></link><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterErrorEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:resetAchievements"><apiName>resetAchievements</apiName><shortdesc>
	 Sends a request to reset the user's achievements in this game.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>if the current device does not support GameCenter.
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	 Sends a request to reset the user's achievements in this game.  Once complete, either GameCenterEvent.ACHIEVEMENT_RESET_SUCCEEDED or GameCenterErrorEvent.ACHIEVEMENT_RESET_FAILED will be dispatched.
	 
	 Note that iOS will not ask the user to confirm they want to reset their progress; it is up to you to dislay a confirmation modal if you wish.
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</linktext></link><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterErrorEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:showAchievementBanners"><apiName>showAchievementBanners</apiName><shortdesc>
	 By default, iOS does not display a banner when the user has won an achievement- so that you may create your own
	 custom UI to notify the user in response to the Achievement events.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>showBanners</apiItemName><apiType value="Boolean"/><apiDesc>set true to show native iOS achievement notifications; false if you will be displaying your own
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 By default, iOS does not display a banner when the user has won an achievement- so that you may create your own
	 custom UI to notify the user in response to the Achievement events.  Calling showAchievementBanners(true)
	 will cause iOS to show a notification to the user in native UI when they win an achievement.
	 
	 This will only work if the current device is running iOS 5 or greater and supports GameCenter.  To determine
	 if you can use native banners or need to create your own, you may check first by calling areBannersAvailable().
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:showAchievements"><apiName>showAchievements</apiName><shortdesc>
	 Shows the iOS Achievements view for the user on GameCenter.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>if the current device does not support GameCenter.
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	 Shows the iOS Achievements view for the user on GameCenter.
	 Once the view is displayed, GameCenterEvent.ACHIEVEMENT_VIEW_OPENED will be dispatched; on dismissal, GameCenterEvent.ACHIEVEMENT_VIEW_CLOSED will be dispatched.  You may use these events to pause and resume your own game UI interactions as appropriate.
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</linktext></link><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterErrorEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:showChallenger"><apiName>showChallenger</apiName><shortdesc>
	 Displays a view to the user to issue challenges to friends.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>if challenges are not supported.
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	 Displays a view to the user to issue challenges to friends.
	 
	 Only available on iOS6+; check areChallengesAvailable() before calling showChallenges().
	 
	 When the view is displayed, GameCenterEvent.CHALLENGE_VIEW_OPENED will be dispatched; and GameCenterEvent.CHALLENGE_VIEW_CLOSED when it's dismissed.  If the view cannot be displayed due to OS support or an authentication error, CHALLENGE_VIEW_FAILED will be dispatched.
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</linktext></link><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterErrorEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</linktext></link></related-links></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:showDeferredAuthUI"><apiName>showDeferredAuthUI</apiName><shortdesc>
	 On iOS 6+, if you called authenticateLocalUser(true) to enable deferred auth, call showDeferredAuthUI() shortly after to present the user with the login dialog.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if the login dialog was displayed; false otherwise
	 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
	 On iOS 6+, if you called authenticateLocalUser(true) to enable deferred auth, call showDeferredAuthUI() shortly after to present the user with the login dialog.  
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.milkmangames.nativeextensions.ios:GameCenter:showLeaderboardForCategory"><apiName>showLeaderboardForCategory</apiName><shortdesc>
	 Shows the iOS Leaderboard view for the user on GameCenter.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>if the current device does not support GameCenter.
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException><apiException><apiDesc>if timeScope is not a valid GCTimeScope value
	 </apiDesc><apiItemName>Error</apiItemName><apiOperationClassifier>Error</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>category</apiItemName><apiType value="String"/><apiDesc>the category ID of the leaderboard you wish to display; this is set in iTunes Connect when you define the leaderboard. Case-sensitive.
	 </apiDesc></apiParam><apiParam><apiItemName>timeScope</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>the default timescope for which display leaderboards; one of the values of GCTimeScope.ALL_TIME, GCTimeScope.TODAY, or GCTimeScope.WEEK.  The default value GCTimeScope.ALL_TIME.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Shows the iOS Leaderboard view for the user on GameCenter.
	 Once the view is displayed, GameCenterEvent.LEADERBOARD_VIEW_OPENED will be dispatched; on dismissal, GameCenterEvent.LEADERBOARD_VIEW_CLOSED will be dispatched.  You may use these events to pause and resume your own game UI interactions as appropriate.
	 </apiDesc></apiOperationDetail><related-links><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterEvent</linktext></link><link href="com.milkmangames.nativeextensions.ios.events.xml#GameCenterErrorEvent"><linktext>com.milkmangames.nativeextensions.ios.events.GameCenterErrorEvent</linktext></link><link href="com.milkmangames.nativeextensions.ios.xml#GCTimeScope"><linktext>com.milkmangames.nativeextensions.ios.GCTimeScope</linktext></link></related-links></apiOperation><apiValue id="com.milkmangames.nativeextensions.ios:GameCenter:VERSION"><apiName>VERSION</apiName><shortdesc>
	 Current API Version
	 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3.3.0</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 Current API Version
	 </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GameCenter:gameCenter:get"><apiName>gameCenter</apiName><shortdesc>
	 The current instance of the GameCenter singelton.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiValueClassifier>com.milkmangames.nativeextensions.ios:GameCenter</apiValueClassifier></apiValueDef><apiDesc>
	 The current instance of the GameCenter singelton.  You must call GameCenter.create() before this property is available.
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions.ios:GCLeaderboardData"><apiName>GCLeaderboardData</apiName><shortdesc> GameCenter Leaderboard Data </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> GameCenter Leaderboard Data </apiDesc></apiClassifierDetail><apiConstructor id="com.milkmangames.nativeextensions.ios:GCLeaderboardData:GCLeaderboardData"><apiName>GCLeaderboardData</apiName><shortdesc> Create New GCLeaderboardData </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>title</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>category</apiItemName><apiType value="String"/></apiParam></apiConstructorDef><apiDesc> Create New GCLeaderboardData </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.milkmangames.nativeextensions.ios:GCLeaderboardData:toString"><apiName>toString</apiName><shortdesc> Return String Representation </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc> Return String Representation </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.milkmangames.nativeextensions.ios:GCLeaderboardData:category:get"><apiName>category</apiName><shortdesc> The leaderboard's category </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> The leaderboard's category </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCLeaderboardData:title:get"><apiName>title</apiName><shortdesc> The leaderboard's title </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> The leaderboard's title </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions.ios:GCPlayerScope"><apiName>GCPlayerScope</apiName><shortdesc> Game Center Player Scope Constants </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> Game Center Player Scope Constants </apiDesc></apiClassifierDetail><apiValue id="com.milkmangames.nativeextensions.ios:GCPlayerScope:FRIENDS_ONLY"><apiName>FRIENDS_ONLY</apiName><shortdesc> Friends Only </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>FRIENDS_ONLY</apiData><apiType value="String"/></apiValueDef><apiDesc> Friends Only </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCPlayerScope:GLOBAL"><apiName>GLOBAL</apiName><shortdesc> Global </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>GLOBAL</apiData><apiType value="String"/></apiValueDef><apiDesc> Global </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions.ios:GCScoreData"><apiName>GCScoreData</apiName><shortdesc> GameCenter Leaderboard Score Data </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> GameCenter Leaderboard Score Data </apiDesc></apiClassifierDetail><apiConstructor id="com.milkmangames.nativeextensions.ios:GCScoreData:GCScoreData"><apiName>GCScoreData</apiName><shortdesc> Create New GCScoreData </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>category</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>playerID</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>rank</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>formattedScore</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>date</apiItemName><apiType value="Date"/></apiParam><apiParam><apiItemName>context</apiItemName><apiType value="uint"/></apiParam></apiConstructorDef><apiDesc> Create New GCScoreData </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.milkmangames.nativeextensions.ios:GCScoreData:toString"><apiName>toString</apiName><shortdesc> Return String Representation </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc> Return String Representation </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.milkmangames.nativeextensions.ios:GCScoreData:category:get"><apiName>category</apiName><shortdesc> The leaderboard category associated with this score </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> The leaderboard category associated with this score </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCScoreData:context:get"><apiName>context</apiName><shortdesc> The Context value associated with this score object </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc> The Context value associated with this score object </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCScoreData:date:get"><apiName>date</apiName><shortdesc> The date this score was achieved </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Date"/></apiValueDef><apiDesc> The date this score was achieved </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCScoreData:formattedScore:get"><apiName>formattedScore</apiName><shortdesc> The localized, string-formatted score </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> The localized, string-formatted score </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCScoreData:playerID:get"><apiName>playerID</apiName><shortdesc> The Player ID associated with this score </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> The Player ID associated with this score </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCScoreData:rank:get"><apiName>rank</apiName><shortdesc> The rank of this score within the leaderboard </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc> The rank of this score within the leaderboard </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCScoreData:value:get"><apiName>value</apiName><shortdesc> The value of this score </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> The value of this score </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions.ios:GCTimeScope"><apiName>GCTimeScope</apiName><shortdesc> Game Center Time Scope Constants </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> Game Center Time Scope Constants </apiDesc></apiClassifierDetail><apiValue id="com.milkmangames.nativeextensions.ios:GCTimeScope:ALL_TIME"><apiName>ALL_TIME</apiName><shortdesc> All Time </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ALL_TIME</apiData><apiType value="String"/></apiValueDef><apiDesc> All Time </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCTimeScope:TODAY"><apiName>TODAY</apiName><shortdesc> Today </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>TODAY</apiData><apiType value="String"/></apiValueDef><apiDesc> Today </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCTimeScope:WEEK"><apiName>WEEK</apiName><shortdesc> Week </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>WEEK</apiData><apiType value="String"/></apiValueDef><apiDesc> Week </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions.ios:GCChallengeInfo"><apiName>GCChallengeInfo</apiName><shortdesc> Challenge Info </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> Challenge Info </apiDesc></apiClassifierDetail><apiConstructor id="com.milkmangames.nativeextensions.ios:GCChallengeInfo:GCChallengeInfo"><apiName>GCChallengeInfo</apiName><shortdesc> Create New ChallengeInfo </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>issuerId</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>receiverId</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>issueDate</apiItemName><apiType value="Date"/></apiParam><apiParam><apiItemName>completionDate</apiItemName><apiType value="Date"/></apiParam><apiParam><apiItemName>message</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>item</apiItemName><apiType value="Object"/></apiParam><apiParam><apiItemName>state</apiItemName><apiType value="String"/></apiParam></apiConstructorDef><apiDesc> Create New ChallengeInfo </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.milkmangames.nativeextensions.ios:GCChallengeInfo:achievementId:get"><apiName>achievementId</apiName><shortdesc> Achievement Id associated with an ACHIEVEMENT type challenge </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Achievement Id associated with an ACHIEVEMENT type challenge </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCChallengeInfo:completionDate:get"><apiName>completionDate</apiName><shortdesc> Date Challenge was completed </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Date"/></apiValueDef><apiDesc> Date Challenge was completed </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCChallengeInfo:issueDate:get"><apiName>issueDate</apiName><shortdesc> Date Challenge was issued </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Date"/></apiValueDef><apiDesc> Date Challenge was issued </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCChallengeInfo:issuerId:get"><apiName>issuerId</apiName><shortdesc> Player ID That Issued this challenge </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Player ID That Issued this challenge </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCChallengeInfo:message:get"><apiName>message</apiName><shortdesc> Message Associated with this challenge </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Message Associated with this challenge </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCChallengeInfo:receiverId:get"><apiName>receiverId</apiName><shortdesc> Player ID that Received this challenge </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Player ID that Received this challenge </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCChallengeInfo:scoreValue:get"><apiName>scoreValue</apiName><shortdesc> Score Value associated with a SCORE type challenge </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> Score Value associated with a SCORE type challenge </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCChallengeInfo:state:get"><apiName>state</apiName><shortdesc>
	 Challenge State
	 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
	 Challenge State
	 </apiDesc></apiValueDetail><related-links><link href="com.milkmangames.nativeextensions.ios.xml#GCChallengeState"><linktext>com.milkmangames.nativeextensions.ios.GCChallengeState</linktext></link></related-links></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCChallengeInfo:type:get"><apiName>type</apiName><shortdesc> Challenge Type
	 
	 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> Challenge Type
	 
	 </apiDesc></apiValueDetail><related-links><link href="com.milkmangames.nativeextensions.ios.xml#GCChallengeType"><linktext>com.milkmangames.nativeextensions.ios.GCChallengeType</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions.ios:GCPlayerData"><apiName>GCPlayerData</apiName><shortdesc> GameCenter Player Data </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> GameCenter Player Data </apiDesc></apiClassifierDetail><apiConstructor id="com.milkmangames.nativeextensions.ios:GCPlayerData:GCPlayerData"><apiName>GCPlayerData</apiName><shortdesc> Create New GCPlayerData </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>playerID</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>playerAlias</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>isFriend</apiItemName><apiType value="Boolean"/></apiParam></apiConstructorDef><apiDesc> Create New GCPlayerData </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.milkmangames.nativeextensions.ios:GCPlayerData:toString"><apiName>toString</apiName><shortdesc> Return String Representation </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc> Return String Representation </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.milkmangames.nativeextensions.ios:GCPlayerData:isFriend:get"><apiName>isFriend</apiName><shortdesc> Whether the player is friends with the local player </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> Whether the player is friends with the local player </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCPlayerData:playerAlias:get"><apiName>playerAlias</apiName><shortdesc> The Player's Alias </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> The Player's Alias </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCPlayerData:playerID:get"><apiName>playerID</apiName><shortdesc> The Player's ID </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> The Player's ID </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions.ios:GCAchievementData"><apiName>GCAchievementData</apiName><shortdesc> GameCenter Achievement Data </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> GameCenter Achievement Data </apiDesc></apiClassifierDetail><apiConstructor id="com.milkmangames.nativeextensions.ios:GCAchievementData:GCAchievementData"><apiName>GCAchievementData</apiName><shortdesc> Create New GCAchievementData </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>title</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>description</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>isHidden</apiItemName><apiType value="Boolean"/></apiParam></apiConstructorDef><apiDesc> Create New GCAchievementData </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.milkmangames.nativeextensions.ios:GCAchievementData:toString"><apiName>toString</apiName><shortdesc> Return String Representation </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc> Return String Representation </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.milkmangames.nativeextensions.ios:GCAchievementData:achievementID:get"><apiName>achievementID</apiName><shortdesc> The Achievement's ID </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> The Achievement's ID </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCAchievementData:description:get"><apiName>description</apiName><shortdesc> The Achievement's Description </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> The Achievement's Description </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCAchievementData:isHidden:get"><apiName>isHidden</apiName><shortdesc> Whether the achievement is hidden </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> Whether the achievement is hidden </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCAchievementData:title:get"><apiName>title</apiName><shortdesc> The Achievement's Title </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> The Achievement's Title </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions.ios:GCChallengeType"><apiName>GCChallengeType</apiName><shortdesc> Challenge Type </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> Challenge Type </apiDesc></apiClassifierDetail><apiValue id="com.milkmangames.nativeextensions.ios:GCChallengeType:ACHIEVEMENT"><apiName>ACHIEVEMENT</apiName><shortdesc> Achievement Challenge </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>achievement</apiData><apiType value="String"/></apiValueDef><apiDesc> Achievement Challenge </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCChallengeType:SCORE"><apiName>SCORE</apiName><shortdesc> Score Challenge </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>score</apiData><apiType value="String"/></apiValueDef><apiDesc> Score Challenge </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions.ios:GCSignatureVerificationData"><apiName>GCSignatureVerificationData</apiName><shortdesc> GCSignatureVerificationData </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> GCSignatureVerificationData </apiDesc></apiClassifierDetail><apiConstructor id="com.milkmangames.nativeextensions.ios:GCSignatureVerificationData:GCSignatureVerificationData"><apiName>GCSignatureVerificationData</apiName><shortdesc> Create New GCSignatureVerificationData </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> Create New GCSignatureVerificationData </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="com.milkmangames.nativeextensions.ios:GCSignatureVerificationData:publicKeyUrl"><apiName>publicKeyUrl</apiName><shortdesc> The Public Key URL </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc> The Public Key URL </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCSignatureVerificationData:salt"><apiName>salt</apiName><shortdesc> The Base64 Encoded Salt </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc> The Base64 Encoded Salt </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCSignatureVerificationData:signature"><apiName>signature</apiName><shortdesc> The Base64 Encoded Signature </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc> The Base64 Encoded Signature </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCSignatureVerificationData:timestamp"><apiName>timestamp</apiName><shortdesc> The Timestamp </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> The Timestamp </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions.ios:GCImageSize"><apiName>GCImageSize</apiName><shortdesc> GCImageSize </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> GCImageSize </apiDesc></apiClassifierDetail><apiValue id="com.milkmangames.nativeextensions.ios:GCImageSize:NORMAL"><apiName>NORMAL</apiName><shortdesc> Normal Size Image </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>normal</apiData><apiType value="String"/></apiValueDef><apiDesc> Normal Size Image </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCImageSize:SMALL"><apiName>SMALL</apiName><shortdesc> Small Size Image </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>small</apiData><apiType value="String"/></apiValueDef><apiDesc> Small Size Image </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions.ios:GCChallengeState"><apiName>GCChallengeState</apiName><shortdesc> Challenge State </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> Challenge State </apiDesc></apiClassifierDetail><apiValue id="com.milkmangames.nativeextensions.ios:GCChallengeState:COMPLETED"><apiName>COMPLETED</apiName><shortdesc> Completed Challenge </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>completed</apiData><apiType value="String"/></apiValueDef><apiDesc> Completed Challenge </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCChallengeState:DECLINED"><apiName>DECLINED</apiName><shortdesc> Declined Challenge </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>declined</apiData><apiType value="String"/></apiValueDef><apiDesc> Declined Challenge </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCChallengeState:INVALID"><apiName>INVALID</apiName><shortdesc> Invalid Challenge </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>invalid</apiData><apiType value="String"/></apiValueDef><apiDesc> Invalid Challenge </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCChallengeState:PENDING"><apiName>PENDING</apiName><shortdesc> Pending Challenge </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>pending</apiData><apiType value="String"/></apiValueDef><apiDesc> Pending Challenge </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.milkmangames.nativeextensions.ios:GCAchievementProgress"><apiName>GCAchievementProgress</apiName><shortdesc> GameCenter Achievement Progress </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc> GameCenter Achievement Progress </apiDesc></apiClassifierDetail><apiConstructor id="com.milkmangames.nativeextensions.ios:GCAchievementProgress:GCAchievementProgress"><apiName>GCAchievementProgress</apiName><shortdesc> Create New GCAchievementProgress </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>completed</apiItemName><apiType value="Boolean"/></apiParam><apiParam><apiItemName>percent</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>isHidden</apiItemName><apiType value="Boolean"/></apiParam><apiParam><apiItemName>lastUpdated</apiItemName><apiType value="Date"/></apiParam></apiConstructorDef><apiDesc> Create New GCAchievementProgress </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.milkmangames.nativeextensions.ios:GCAchievementProgress:toString"><apiName>toString</apiName><shortdesc> Return String Representation </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc> Return String Representation </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.milkmangames.nativeextensions.ios:GCAchievementProgress:achievementID:get"><apiName>achievementID</apiName><shortdesc> The Achievement's ID </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> The Achievement's ID </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCAchievementProgress:completed:get"><apiName>completed</apiName><shortdesc> Whether or not this achievement is completed </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> Whether or not this achievement is completed </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCAchievementProgress:isHidden:get"><apiName>isHidden</apiName><shortdesc> Whether the achievement is hidden </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc> Whether the achievement is hidden </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCAchievementProgress:lastUpdated:get"><apiName>lastUpdated</apiName><shortdesc> The date this achievement was last updated </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Date"/></apiValueDef><apiDesc> The date this achievement was last updated </apiDesc></apiValueDetail></apiValue><apiValue id="com.milkmangames.nativeextensions.ios:GCAchievementProgress:percent:get"><apiName>percent</apiName><shortdesc> Percentage completed for this achieevement, 0-100 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> Percentage completed for this achieevement, 0-100 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>